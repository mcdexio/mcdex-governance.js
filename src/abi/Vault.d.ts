/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface VaultInterface extends ethers.utils.Interface {
  functions: {
    "authenticator()": FunctionFragment;
    "execute(address,bytes,uint256)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "transferERC20(address,address,uint256)": FunctionFragment;
    "transferERC721(address,uint256,address)": FunctionFragment;
    "transferETH(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "authenticator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [string, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferERC20",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferERC721",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferETH",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "authenticator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferETH",
    data: BytesLike
  ): Result;

  events: {
    "ExecuteTransaction(address,bytes,uint256)": EventFragment;
    "TransferERC20Token(address,address,uint256)": EventFragment;
    "TransferERC721Token(address,uint256,address)": EventFragment;
    "TransferETH(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ExecuteTransaction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferERC20Token"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferERC721Token"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferETH"): EventFragment;
}

export class Vault extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: VaultInterface;

  functions: {
    authenticator(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "authenticator()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    execute(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execute(address,bytes,uint256)"(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferERC20(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferERC20(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferERC721(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferERC721(address,uint256,address)"(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferETH(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferETH(address,uint256)"(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  authenticator(overrides?: CallOverrides): Promise<string>;

  "authenticator()"(overrides?: CallOverrides): Promise<string>;

  execute(
    to: string,
    data: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execute(address,bytes,uint256)"(
    to: string,
    data: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(
    authenticator_: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    authenticator_: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferERC20(
    token: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferERC20(address,address,uint256)"(
    token: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferERC721(
    token: string,
    tokenID: BigNumberish,
    recipient: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferERC721(address,uint256,address)"(
    token: string,
    tokenID: BigNumberish,
    recipient: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferETH(
    recipient: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferETH(address,uint256)"(
    recipient: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    authenticator(overrides?: CallOverrides): Promise<string>;

    "authenticator()"(overrides?: CallOverrides): Promise<string>;

    execute(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "execute(address,bytes,uint256)"(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      authenticator_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address)"(
      authenticator_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    transferERC20(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferERC20(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferERC721(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferERC721(address,uint256,address)"(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferETH(
      recipient: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferETH(address,uint256)"(
      recipient: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ExecuteTransaction(to: string | null, data: null, value: null): EventFilter;

    TransferERC20Token(
      token: string | null,
      to: string | null,
      amount: null
    ): EventFilter;

    TransferERC721Token(
      token: string | null,
      tokenID: null,
      to: string | null
    ): EventFilter;

    TransferETH(to: string | null, amount: null): EventFilter;
  };

  estimateGas: {
    authenticator(overrides?: CallOverrides): Promise<BigNumber>;

    "authenticator()"(overrides?: CallOverrides): Promise<BigNumber>;

    execute(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execute(address,bytes,uint256)"(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address)"(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferERC20(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferERC20(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferERC721(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferERC721(address,uint256,address)"(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferETH(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferETH(address,uint256)"(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    authenticator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "authenticator()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    execute(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execute(address,bytes,uint256)"(
      to: string,
      data: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      authenticator_: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferERC20(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferERC20(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferERC721(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferERC721(address,uint256,address)"(
      token: string,
      tokenID: BigNumberish,
      recipient: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferETH(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferETH(address,uint256)"(
      recipient: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
