/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { McbMinter } from "./McbMinter";

export class McbMinterFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): McbMinter {
    return new Contract(address, _abi, signerOrProvider) as McbMinter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BaseMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BaseRelease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toRecipientAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "developer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toDevAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "maxSupply",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "rateLimitPerBlock",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "startBlock",
        type: "uint128",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCapturedUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastCapturedBlock",
        type: "uint256",
      },
    ],
    name: "OnValueCaptured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoundMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoundRelease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldDeveloper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newDeveloper",
        type: "address",
      },
    ],
    name: "SetDeveloper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastUpdateBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseMintableAmount",
        type: "uint256",
      },
    ],
    name: "UpdateBaseMintableAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastCapturedBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "capturedBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "capturedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "extraMintableAmount",
        type: "uint256",
      },
    ],
    name: "UpdateExtraMintableAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastUpdateBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seriesAMintableAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "extraMintableAmount",
        type: "uint256",
      },
    ],
    name: "UpdateRoundMintableAmount",
    type: "event",
  },
  {
    inputs: [],
    name: "DEVELOPER_COMMISSION_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MCB_MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VALUE_CAPTURE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authenticator",
    outputs: [
      {
        internalType: "contract IAuthenticator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMintState",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "maxSupply",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "rateLimitPerBlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "mintableAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lastUpdateBlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "mintedAmount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "developer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraMintableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintableAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "baseMintableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "roundMintableAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authenticator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "mcbToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "developer_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "genesisBlock_",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "baseInitialSupply_",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "baseMinReleaseRate_",
        type: "uint128",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCapturedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCapturedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mcbToken",
    outputs: [
      {
        internalType: "contract IMCB",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintFromBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "mintFromRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "maxSupply",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "rateLimitPerBlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "startBlock",
        type: "uint128",
      },
    ],
    name: "newRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalCapturedUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCapturedBlock",
        type: "uint256",
      },
    ],
    name: "onValueCaptured",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roundMintStates",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "maxSupply",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "rateLimitPerBlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "mintableAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lastUpdateBlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "mintedAmount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDeveloper",
        type: "address",
      },
    ],
    name: "setDeveloper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateMintableAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
